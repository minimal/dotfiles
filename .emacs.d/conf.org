#+STARTUP: content
#+OPTIONS: toc:4 h:4
#+TITLE: Emacs configuration

This document is the result of me wanting to test literate programming
and thinking that my emacs configuration was the perfect candidate. It
is directly inspired by [[http://sachachua.com/blog/2012/06/literate-programming-emacs-configuration-file/][a blog post]] by Sacha Chua and others.

* General
  helm, ido etc

** Use package
   This is a better way to fetch and load packages
   You should keep :init forms as simple as possible, and put as much as
 you can get away with on the :config side. Config doesn't run till
 the mode is activated.

** ido
   Not used much now after helm but make sure it is vertical

   #+BEGIN_SRC emacs-lisp
     (use-package ido-vertical-mode
       :ensure t
       :init (ido-vertical-mode 1))

   #+END_SRC

** helm
   Use for a lot of things, buffer swithing, finding files, searching
   for words.

   More options at http://pages.sachachua.com/.emacs.d/Sacha.html#unnumbered-14

   #+BEGIN_SRC emacs-lisp
     (message "hi there from org")
     (use-package helm
       :ensure helm
       :diminish helm-mode
       :init
       (progn
         (setq helm-quick-update t
               helm-ff-skip-boring-files t)
         (helm-mode))
       :bind (("<f9>" . helm-mini)
              ("M-<f9>" . helm-projectile-find-file-and-recent)
              ("M-S-<f9>" . helm-projectile)
              ("<f11>" . helm-semantic-or-imenu)
              ("M-x" . helm-M-x)))
   #+END_SRC

*** helm-swoop

    Very good in-buffer searching

    #+begin_src emacs-lisp
      (use-package helm-swoop
        :bind
        (("C-M-s" . helm-swoop)
         ;; ("C-S-s" . helm-swoop)
         ;; ("M-i" . helm-swoop)
         ;; ("M-s s" . helm-swoop)
         ;; ("M-s M-s" . helm-swoop)
         ("M-I" . helm-swoop-back-to-last-point)
         ("C-c M-i" . helm-multi-swoop)
         ("C-x M-i" . helm-multi-swoop-all)
         )
        :config
        (progn
          (define-key isearch-mode-map (kbd "M-i") 'helm-swoop-from-isearch)
          (define-key helm-swoop-map (kbd "M-i") 'helm-multi-swoop-all-from-helm-swoop)))
    #+end_src

*** projectile

    Allows operations within projects (e.g. git repo). Good
    integration with helm.

    Use custom command for recent files in project and then all files
    in project.

    #+begin_src emacs-lisp :tangle yes
      (use-package helm-projectile
        :ensure helm-projectile)

      (use-package projectile
        :ensure projectile
        :diminish projectile-mode
        :init
        (progn
          ;; (setq projectile-keymap-prefix (kbd "C-c p"))
          ;; (setq projectile-completion-system 'default)
          (helm-projectile-command "find-file-and-recent"
                                   '(helm-source-projectile-recentf-list
                                     helm-source-projectile-files-list)
                                   "Find file or recent: ")
          (setq projectile-enable-caching t)
          (projectile-global-mode)))

    #+end_src
