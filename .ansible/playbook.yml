---
- hosts: all
  vars:
    home: "{{ lookup('env','HOME') }}"
    code_home: "{{ home }}/code"
    vendor_code:  "{{ code_home }}/vendor"
    # applications: # .dmg, .app, .zip type applications via brew-cask
    #   - google-chrome
    #   - firefox

  tasks:
    - homebrew_tap: tap=homebrew/versions state=present
    - homebrew_tap: tap=caskroom/fonts state=present
    - homebrew_tap: tap=osx-cross/avr state=present
    - name: Install libraries with homebrew
      homebrew: name={{ item }} state=present
      with_items:
        # - caskroom/cask/brew-cask
        # - apple-gcc42
        # - vim
        - git
        - trash
        - exa
        # - caskroom/cask/osxfuse
        # - sshfs
        # - rbenv
        # - ruby-build
        # - elasticsearch
        # - postgres
        # - mysql
        # - apache-spark
        # - rust
        - planck
        # - node # use nvm instead

        ##  moved to nix:
        # - coreutils
        # - gnu-tar
        # - gnu-sed
        # - gnutls
        # - gnu-indent
        # - gnu-getopt
        # - htop
        # - tmux
        # - zsh
        # - gawk
        # - the_silver_searcher
        # - findutils
        # - fd
        # - fpp
        # - fzf
        # - aspell
        # - shellcheck
        # - wget
        # - rlwrap
        # - leiningen
        # - python
        # - python3
        # - tree
        # - terminal-notifier
        # - unrar
        # - poppler # has pdffonts

    # - name: Aspell

    #State : STANDARD.
    # - name: Emacs
    #   homebrew: name=emacs state=present install_options=with-cocoa,with-glib,with-gnutls,HEAD

    - name: Install homebrew cask apps
      homebrew_cask: name={{ item }} state=present
      with_items:
#        - google-chrome
        - amethyst
        # - quicksilver
        - diffmerge
#        - intellij-idea
        - iterm2
        - flux
        # - istat-menus
        # - menumeters
        - launchrocket
        - trailer
        # - sequel-pro
        # - telegram
        # - vlc
        # - spotify
        # - skype
        # - elm-platform
        # - karabiner
        # - seil
        - font-anonymous-pro
        - font-source-code-pro
        - font-alegreya
        - font-alegreya-sans
        - font-cardo
        # - font-droid-sans-mono
        # - font-droid-sans
        # - font-droid-serif
        - font-fira-code
        - font-fira-mono
        - font-fira-sans
        - font-hasklig
        - font-inconsolata
        - font-lato
        - font-monoid
        - font-open-sans
        - font-vollkorn


    - name: Clone dotfiles
      # I set force and update to no so that if I have any working
      # changes or changes that I haven't pushed up it doesn't reset
      # my local history.
      git: repo=git@github.com:minimal/{{ item }}.git dest={{ code_home }}/{{ item }} force=no update=no recursive=yes accept_hostkey=true
      with_items:
        - dotfiles
        - prezto

    - name: Symlink dotfiles
      file: path={{ home }}/{{ item }} src={{ code_home }}/dotfiles/{{ item }} state=link
      with_items:
        - .gitconfig
        - .tmux.conf
        - .amethyst
        - .sshrc
        - .tmux.conf
        - .lein
        - .ansible

    - name: Symlink dotfiles2
      file: path={{ home }}/.{{ item }} src={{ code_home }}/dotfiles/{{ item }} state=link
      with_items:
        - gitignore
        - boot
        - joker
        - emacs.d

    - name: Symlink dotfiles3
      file: path={{ home }}/.config/{{ item }} src={{ code_home }}/dotfiles/{{ item }} state=link
      with_items:
        - nixpkgs

    - name: Setup prezto # TODO: the symlinks as well
      file: path={{ home }}/.zprezto src={{ code_home }}/prezto state=link

    # - name: Pip python packages
    #   environment:
    #     PIP_REQUIRE_VIRTUALENV: false
    #   pip: name={{ item }}
    #   with_items:
    #     - virtualenv
    #     - virtualenvwrapper
    #     - flake8
    #     - ipython

    # - name: Check if ls++ is installed
    #   stat: path={{ home }}/perl5/bin/ls++
    #   register: lspp_installed

    # - name: Get ls++
    #   git: repo=git@github.com:trapd00r/ls--.git dest={{ vendor_code }}/ls--

    # - name: Install ls++
    #   shell: cd {{ vendor_code }}/ls-- &&  cpan Term::ExtendedColor && perl Makefile.PL && make && make install && cp ls++.conf {{ home }}/.ls++.conf
    #   when: lspp_installed.stat.exists == false

    - name: make cache dir
      shell: mkdir -p ~/.cache
